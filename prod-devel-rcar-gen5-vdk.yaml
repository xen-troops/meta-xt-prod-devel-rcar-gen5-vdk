desc: "Xen-Troops development setup for Renesas RCAR gen5 hardware"
min_ver: "0.27"

variables:
  YOCTOS_WORK_DIR: "yocto"
  DOM0_BUILD_DIR: "build-dom0"
  DOMD_BUILD_DIR: "build-domd"
  DOMU_BUILD_DIR: "build-domu"
  BUILD_TARGET_DOMD: "rcar-image-adas"
  BUILD_TARGET_DOMU: "rcar-image-adas"
  XT_DOMD_DTB_NAME: "%{SOC_FAMILY}-%{DOMD_MACHINE}-domd.dtb"
  XT_XEN_DTB_NAME: "%{SOC_FAMILY}-%{DOMD_MACHINE}-xen.dtb"
  XT_GENERIC_DOMU_TAG: ""
  DOM0_MACHINE: "generic-armv8-xt"
  DOMD_MACHINE: "ironhide"
  DOMU_MACHINE: "ironhide"
  SOC_FAMILY: "r8a78000"
  XT_DOMD_CONFIG_NAME: "domd-ironhide.cfg"
  XT_DOMU_CONFIG_NAME: "domu-ironhide.cfg"
  XT_KERNEL_BRANCH: "v6.1.102/rcar-5.2.0.rc11_vpf.rc19-xt"
  XT_KERNEL_REV: "${AUTOREV}"
common_data:
  # Sources used by all yocto-based domains
  sources: &COMMON_SOURCES
    - type: git
      url: "git://git.yoctoproject.org/poky"
      rev: 1678bb9ee2a1ce476b5b153d9e79bb9813c33574 # scarthgap
    - type: git
      url: "git://git.openembedded.org/meta-openembedded"
      rev: 1235dd4ed4a57e67683c045ad76b6a0f9e896b45 # scarthgap
    - type: git
      url: "git://git.yoctoproject.org/meta-virtualization"
      rev: 66ee8d268db25a9f2848bda6858c284c745f549f # scarthgap
    - type: git
      url: "https://github.com/xen-troops/meta-xt-common.git"
      rev: ed0819f68028204ec5fb4ee91a17728e7fe1d899 # master (scarthgap)

  # Sources to be used in DomD and DomU
  domd_domu_sources: &DOMD_DOMU_SOURCES
    - type: git
      url: https://github.com/renesas-rcar/meta-renesas.git
      rev: Renesas-Yocto-v7.13.0 # scarthgap

  # Common configuration options for all yocto-based domains
  conf: &COMMON_CONF
    - [SSTATE_DIR, "${TOPDIR}/../common_data/sstate"]
    - [DL_DIR, "${TOPDIR}/../common_data/downloads"]

    # Skip warning about missing "virtualization" distro feature
    - [SKIP_META_VIRT_SANITY_CHECK, "1"]

    # Use hypervisor console on all guests
    - [SERIAL_CONSOLES, "115200;hvc0"]
  # Conf options for domain that are built used renesas layer
  domd_domu_conf: &DOMD_DOMU_CONF
    - [SOC_FAMILY, "%{SOC_FAMILY}"]
    # Add systemd configuration
    - [DISTRO_FEATURES:append, " systemd"]
    - [VIRTUAL-RUNTIME_init_manager, "systemd"]
    # add the static lib to SDK toolchain
    - [SDKIMAGE_FEATURES:append, " staticdev-pkgs"]
    # Add for gstreamer plugins ugly
    - [LICENSE_FLAGS_ACCEPTED, "commercial"]
    # Add Capacity Aware migration Strategy (CAS)
    - [MACHINE_FEATURES:append, " cas"]
    # Remove ptest to reduce the build time
    - [DISTRO_FEATURES:remove, "ptest"]
    # Generate ext4 image files
    - [IMAGE_FSTYPES:append, " ext4"]
    - [MACHINE_FEATURES:append, " gsx"]
    - [BB_MULTI_PROVIDER_ALLOWED:append," virtual/libgl virtual/egl virtual/libgles1 virtual/libgles2"]
    - [DISTRO_FEATURES_NATIVESDK:append," wayland"]
    - [PREFERRED_VERSION_nativesdk-wayland, "1.18.0"]
    - [DISTRO_FEATURES:append, " pam"]
    - [DISTRO_FEATURES:remove, " x11 vulkan"]
    - [PREFERRED_PROVIDER_virtual/libgles1, ""]
    - [PREFERRED_PROVIDER_virtual/libgles2, "gles-user-module"]
    - [PREFERRED_PROVIDER_virtual/egl, "libegl"]
    - [PREFERRED_PROVIDER_virtual/libgl, ""]
    - [PREFERRED_PROVIDER_virtual/mesa, ""]
    - [PREFERRED_PROVIDER_virtual/libgbm, "libgbm"]
    - [PREFERRED_PROVIDER_libgbm-dev, "libgbm"]
    - [BBMASK:append, " mesa-gl"]
    - [BBMASK:append, " meta-xt-common/meta-xt-driver-domain-virtio/recipes-extended/xen/"]

components:
  dom0:
    build-dir: "%{YOCTOS_WORK_DIR}"
    default: true
    sources:
      - *COMMON_SOURCES
    builder:
      type: yocto
      work_dir: "%{DOM0_BUILD_DIR}"
      conf:
        - *COMMON_CONF
        - [MACHINE, "%{DOM0_MACHINE}"]
        - [XT_DOM_NAME, "dom0"]
        - [XT_DOMD_CONFIG_NAME, "%{XT_DOMD_CONFIG_NAME}"]
        - [XT_DOMD_DTB_NAME, "%{XT_DOMD_DTB_NAME}"]
        - [XT_GUEST_INSTALL, "%{XT_GENERIC_DOMU_TAG} domd"]

        # Remove unused DISTRO_FEATURES
        - [DISTRO_FEATURES:remove, "acl alsa argp pcmcia usbgadget
                usbhost opengl ptest multiarch wayland vulkan
                sysvinit pulseaudio"]
        - [IMAGE_INSTALL:remove, " qemu"]

        # Disable HWDB which quite huge (around 15MB) and is not required at all
        - [BAD_RECOMMENDATIONS:append, " udev-hwdb"]

        # Enable systemd on dom0
        - [DISTRO_FEATURES:append, " systemd"]
        - [VIRTUAL-RUNTIME_init_manager, "systemd"]

        # Do not install kernel image to rootfs to decrease initrd size
        - ["RRECOMMENDS:${KERNEL_PACKAGE_NAME}-base", ""]

        - [PREFERRED_VERSION_xen-tools, "4.19.0+git%"]
        - [PREFERRED_VERSION_xen, "4.19.0+git%"]
        - [DISTRO_FEATURES:append, " usrmerge"]
        - [BBMASK:append, " meta-xt-common/meta-xt-domu/recipes-kernel/linux-libc-headers/"]

        # Flag, which allows to override parameters on the Yocto level.
        # E.g. amount of used RAM for driver and guest domains.
        - [OVERRIDES:append, ":enable_virtio"]
        # Enable related distro-feautre in order to create conditions in Yocto recipes
        - [DISTRO_FEATURES:append, " enable_virtio"]
        - [DISTRO_FEATURES:append, " xen vmsep"]

      layers:
        - "../meta-virtualization"
        - "../meta-openembedded/meta-oe"
        - "../meta-openembedded/meta-filesystems"
        - "../meta-openembedded/meta-python"
        - "../meta-openembedded/meta-networking"
        - "../meta-xt-common/meta-xt-dom0"
        - "../meta-xt-common/meta-xt-domx"
        - "../meta-xt-common/meta-xt-control-domain"
        - "../meta-xt-common/meta-xt-control-domain-virtio"
        - "../meta-xt-common/meta-xt-qemu"
        - "../../layers/meta-xt-dom0-gen5"
        - "../../layers/meta-xt-domx-gen5"
      build_target: core-image-thin-initramfs
      external_src:
        domd: "%{YOCTOS_WORK_DIR}/%{DOMD_BUILD_DIR}/tmp/deploy/images/%{DOMD_MACHINE}/"
      additional_deps:
        - "%{DOMD_BUILD_DIR}/tmp/deploy/images/%{DOMD_MACHINE}/Image"
      target_images:
        - "tmp/deploy/images/%{DOM0_MACHINE}/Image"
        - "tmp/deploy/images/%{DOM0_MACHINE}/uInitramfs"
  domd:
    build-dir: "%{YOCTOS_WORK_DIR}"
    sources:
      - *COMMON_SOURCES
      - *DOMD_DOMU_SOURCES
      - type: git
        url: git://git.yoctoproject.org/meta-selinux
        rev: 9f5a46620a07d7b15722593a33e46a4d19392b75 # scarthgap
    builder:
      type: yocto
      work_dir: "%{DOMD_BUILD_DIR}"
      conf:
        - *COMMON_CONF
        - *DOMD_DOMU_CONF
        - [MACHINE, "%{DOMD_MACHINE}"]
        - [XT_DOM_NAME, "domd"]
        - [XT_DEVICE_TREES, "%{XT_DOMD_DTB_NAME} %{XT_XEN_DTB_NAME}"]
        - [XT_KERNEL_BRANCH, "%{XT_KERNEL_BRANCH}"]
        - [XT_KERNEL_REV, "%{XT_KERNEL_REV}"]
        - [IMAGE_INSTALL:append, " iperf3"]
        - [IMAGE_INSTALL:append, " lisot"]
        - [IMAGE_INSTALL:append, " qemu-system-aarch64"]
        - [IMAGE_INSTALL:append, " qemu-keymaps"]
        - [PREFERRED_VERSION_xen-tools, "4.19.0+git%"]
        - [PREFERRED_VERSION_xen, "4.19.0+git%"]
        - [DISTRO_FEATURES:append, " usrmerge"]
        # Enable xen-virtio distro feature
        - [DISTRO_FEATURES:append, " enable_virtio"]
        # QEMU-related configuration
        - [DISTRO_FEATURES:append, " xen vmsep"]
        - [QEMUVERSION, "7.0%"]

      build_target: "%{BUILD_TARGET_DOMD}"
      layers:
        - "../meta-virtualization"
        - "../meta-selinux"
        - "../meta-openembedded/meta-oe"
        - "../meta-openembedded/meta-networking"
        - "../meta-openembedded/meta-python"
        - "../meta-openembedded/meta-filesystems"
        - "../meta-renesas/meta-rcar-gen5"
        - "../meta-xt-common/meta-xt-domx"
        - "../meta-xt-common/meta-xt-driver-domain"
        - "../meta-xt-common/meta-xt-security"
        - "../meta-xt-common/meta-xt-driver-domain-virtio"
        - "../meta-xt-common/meta-xt-qemu"
        - "../../layers/meta-xt-domd-gen5"
        - "../../layers/meta-xt-domx-gen5"
      target_images:
        - "tmp/deploy/images/%{DOMD_MACHINE}/Image"
        - "tmp/deploy/images/%{DOMD_MACHINE}/%{BUILD_TARGET_DOMD}-x5h.ext4"
        - "tmp/deploy/images/%{DOMD_MACHINE}/xen-%{DOMD_MACHINE}.uImage"
        - "tmp/deploy/images/%{DOMD_MACHINE}/xenpolicy-%{DOMD_MACHINE}"
        - "tmp/deploy/images/%{DOMD_MACHINE}/%{SOC_FAMILY}-%{DOMD_MACHINE}-xen.dtb"
        - "tmp/deploy/images/%{DOMD_MACHINE}/u-boot-%{DOMD_MACHINE}.bin"

  domu:
    build-dir: "%{YOCTOS_WORK_DIR}"
    sources:
      - *COMMON_SOURCES
      - *DOMD_DOMU_SOURCES
    builder:
      type: yocto
      work_dir: "%{DOMU_BUILD_DIR}"
      conf:
        - *COMMON_CONF
        - *DOMD_DOMU_CONF
        - [MACHINE, "%{DOMU_MACHINE}"]
        - [XT_DOM_NAME, "domu"]
        - [EXTRA_IMAGEDEPENDS:remove, "u-boot"]
        - [DISTRO_FEATURES:append, " usrmerge"]
        - [IMAGE_INSTALL:remove, " kernel-devicetree"]
      layers:
        - "../meta-openembedded/meta-oe"
        - "../meta-openembedded/meta-filesystems"
        - "../meta-openembedded/meta-python"
        - "../meta-openembedded/meta-networking"
        - "../meta-renesas/meta-rcar-gen5"
        - "../meta-xt-common/meta-xt-domu"
        - "../meta-xt-common/meta-xt-domu-virtio"
        - "../../layers/meta-xt-domx-gen5"
        - "../../layers/meta-xt-domu-gen5"
      build_target: "%{BUILD_TARGET_DOMU}"
      target_images:
        - "tmp/deploy/images/%{DOMU_MACHINE}/Image"
        - "tmp/deploy/images/%{DOMU_MACHINE}/%{BUILD_TARGET_DOMU}-x5h.ext4"

  boot_artifacts:
    build-dir: "artifacts"
    builder:
      type: archive
      name: "%{DOMD_MACHINE}-boot-artifacts.tar.bz2"
      items:
        - "%{YOCTOS_WORK_DIR}/%{DOM0_BUILD_DIR}/tmp/deploy/images/%{DOM0_MACHINE}/Image"
        - "%{YOCTOS_WORK_DIR}/%{DOM0_BUILD_DIR}/tmp/deploy/images/%{DOM0_MACHINE}/uInitramfs"
        - "%{YOCTOS_WORK_DIR}/%{DOMD_BUILD_DIR}/tmp/deploy/images/%{DOMD_MACHINE}/xen-%{DOMD_MACHINE}.uImage"
        - "%{YOCTOS_WORK_DIR}/%{DOMD_BUILD_DIR}/tmp/deploy/images/%{DOMD_MACHINE}/xenpolicy-%{DOMD_MACHINE}"
        - "%{YOCTOS_WORK_DIR}/%{DOMD_BUILD_DIR}/tmp/deploy/images/%{DOMD_MACHINE}/%{SOC_FAMILY}-%{DOMD_MACHINE}-xen.dtb"
        - "%{YOCTOS_WORK_DIR}/%{DOMD_BUILD_DIR}/tmp/deploy/images/%{DOMD_MACHINE}/u-boot-%{DOMD_MACHINE}.bin"

images:
  mmc_flash:
    type: gpt
    desc: "Virtualizer eMMC image for DomD/DomU rootfs"
    partitions:
      domd_rootfs:
        gpt_type: B921B045-1DF0-41C3-AF44-4C6F280D3FAE # Linux aarch64 root
        type: raw_image
        image_path: "%{YOCTOS_WORK_DIR}/%{DOMD_BUILD_DIR}/tmp/deploy/images/%{DOMD_MACHINE}/%{BUILD_TARGET_DOMD}-x5h.ext4"

parameters:
  ENABLE_DOMU:
    desc: "Build generic Yocto-based DomU"
    "no":
      overrides:
        variables:
          # We have nothing to change.
          # This is needed to keep yaml-parser sane.
          XT_DOMU_TAG: ""
    "yes":
      default: true
      overrides:
        variables:
          XT_GENERIC_DOMU_TAG: "domu"
        components:
          dom0:
            builder:
              conf:
                - [XT_DOMU_CONFIG_NAME, "%{XT_DOMU_CONFIG_NAME}"]
              additional_deps:
                - "%{DOMU_BUILD_DIR}/tmp/deploy/images/%{DOMU_MACHINE}/Image"
              external_src:
                domu: "%{YOCTOS_WORK_DIR}/%{DOMU_BUILD_DIR}/tmp/deploy/images/%{DOMU_MACHINE}/"
        images:
          mmc_flash:
            partitions:
              domu_rootfs:
                gpt_type: B921B045-1DF0-41C3-AF44-4C6F280D3FAE # Linux aarch64 root
                type: raw_image
                image_path: "%{YOCTOS_WORK_DIR}/%{DOMU_BUILD_DIR}/tmp/deploy/images/%{DOMU_MACHINE}/%{BUILD_TARGET_DOMU}-x5h.ext4"

